{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\shoppin-stores\\\\client\\\\src\\\\screens\\\\Content.js\";\nimport React, { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Card } from \"react-native-paper\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AntDesign, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport TopBar from \"../components/TopBar\";\nimport config from \"../../\";\nimport Store from \"./Store\";\nexport var FeedContext = React.createContext();\nexport default function Content() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      content = _useState2[0],\n      setContent = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      temp = _useState4[0],\n      setTemp = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      open = _useState6[0],\n      setOpen = _useState6[1];\n\n  var load = false;\n\n  if (content.length == 0 && !open) {\n    load = true;\n  }\n\n  var getData = function getData() {\n    axios({\n      url: config.URI + \"/posts/\"\n    }).then(function (res) {\n      console.log(\"Check out data\");\n      var data = res.data;\n      setContent(data);\n    }).catch(function () {\n      console.log(\"Error in retriving data..\");\n    });\n  };\n\n  var LeftContent = function LeftContent() {\n    return React.createElement(AntDesign, {\n      name: \"rightcircle\",\n      size: 26,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var openProfile = function openProfile(store) {\n    setOpen(true);\n    setTemp(store);\n    setContent([]);\n  };\n\n  var closeProfile = function closeProfile() {\n    setOpen(false);\n    getData();\n  };\n\n  useFocusEffect(useCallback(function () {\n    closeProfile();\n    getData();\n    return function () {\n      return console.log(\"Stopped Fetching\");\n    };\n  }, []));\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(TopBar, {\n    name: \"Feed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), load && React.createElement(View, {\n    style: styles.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#db7093\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), open && React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    style: {\n      alignItems: \"flex-end\",\n      marginRight: 5,\n      paddingTop: 5\n    },\n    onPress: closeProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"close\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })), React.createElement(Store, {\n    companyName: temp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, content.map(function (item) {\n    return React.createElement(Card, {\n      key: item._id,\n      onPress: function onPress() {\n        return openProfile(item.store);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, React.createElement(Card.Title, {\n      title: item.store,\n      subtitle: item.name,\n      left: LeftContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), React.createElement(Card.Cover, {\n      source: {\n        uri: item.image\n      },\n      style: {\n        resizeMode: \"contain\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 65,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  loading: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/shoppin-stores/client/src/screens/Content.js"],"names":["React","useState","useCallback","axios","Card","AntDesign","MaterialCommunityIcons","useFocusEffect","TopBar","config","Store","FeedContext","createContext","Content","content","setContent","temp","setTemp","open","setOpen","load","length","getData","url","URI","then","res","console","log","data","catch","LeftContent","openProfile","store","closeProfile","styles","loading","alignItems","marginRight","paddingTop","map","item","_id","name","uri","image","resizeMode","StyleSheet","create","container","flex","justifyContent","alignContent"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { AntDesign, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport config from \"../../\";\r\nimport Store from \"./Store\";\r\n\r\nexport const FeedContext = React.createContext();\r\n\r\nexport default function Content() {\r\n  const [content, setContent] = useState([]);\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  let load = false;\r\n\r\n  if (content.length == 0 && !open) {\r\n    load = true;\r\n  }\r\n\r\n  const getData = () => {\r\n    axios({\r\n      url: `${config.URI}/posts/`,\r\n    })\r\n      .then((res) => {\r\n        console.log(\"Check out data\");\r\n        const data = res.data;\r\n        setContent(data);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Error in retriving data..\");\r\n      });\r\n  };\r\n\r\n  const LeftContent = () => (\r\n    <AntDesign name=\"rightcircle\" size={26} color=\"black\" />\r\n  );\r\n\r\n  const openProfile = (store) => {\r\n    setOpen(true);\r\n    setTemp(store);\r\n    setContent([]);\r\n  };\r\n\r\n  const closeProfile = () => {\r\n    setOpen(false);\r\n    getData();\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      closeProfile();\r\n      getData();\r\n\r\n      return () => console.log(\"Stopped Fetching\");\r\n    }, [])\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <TopBar name=\"Feed\" />\r\n      </View>\r\n\r\n      {load && (\r\n        <View style={styles.loading}>\r\n          <ActivityIndicator size=\"large\" color=\"#db7093\" />\r\n        </View>\r\n      )}\r\n\r\n      {open && (\r\n        <>\r\n          <TouchableOpacity\r\n            style={{\r\n              alignItems: \"flex-end\",\r\n              marginRight: 5,\r\n              paddingTop: 5,\r\n            }}\r\n            onPress={closeProfile}\r\n          >\r\n            <MaterialCommunityIcons name=\"close\" size={24} color=\"black\" />\r\n          </TouchableOpacity>\r\n          <Store companyName={temp} />\r\n        </>\r\n      )}\r\n      <ScrollView>\r\n        {content.map((item) => (\r\n          <Card key={item._id} onPress={() => openProfile(item.store)}>\r\n            <Card.Title\r\n              title={item.store}\r\n              subtitle={item.name}\r\n              left={LeftContent}\r\n            />\r\n            <Card.Cover\r\n              source={{ uri: item.image }}\r\n              style={{ resizeMode: \"contain\" }}\r\n            />\r\n          </Card>\r\n        ))}\r\n      </ScrollView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 65,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loading: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}