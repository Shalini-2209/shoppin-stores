{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\mobile-app\\\\client\\\\src\\\\components\\\\TopBar.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport NewProfile from \"../screens/CreateStore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LoginContext } from \"../../App\";\nimport Main from \"../screens/Main\";\nexport default function TopBar(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      create = _useState2[0],\n      setCreate = _useState2[1];\n\n  var _React$useContext = React.useContext(LoginContext),\n      _React$useContext2 = _slicedToArray(_React$useContext, 2),\n      login = _React$useContext2[0],\n      setLogin = _React$useContext2[1];\n\n  var size = \"auto\";\n\n  if (create) {\n    size = \"100%\";\n  }\n\n  var logMeOut = function logMeOut() {\n    AsyncStorage.clear();\n    setLogin(false);\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: size\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"menu\",\n    size: 26,\n    color: \"#db7093\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.textInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \" \", props.name), React.createElement(TouchableOpacity, {\n    onPress: logMeOut,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#e28ca8\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Log out\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"black\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    marginTop: \"10%\"\n  },\n  textInput: {\n    color: \"#e28ca8\",\n    fontSize: 20,\n    padding: 10\n  },\n  button: {\n    position: \"absolute\",\n    right: 15,\n    padding: 5,\n    borderWidth: 3,\n    borderColor: \"#db7093\"\n  }\n});","map":{"version":3,"sources":["D:/mobile-app/client/src/components/TopBar.js"],"names":["React","useState","MaterialCommunityIcons","NewProfile","AsyncStorage","LoginContext","Main","TopBar","props","create","setCreate","useContext","login","setLogin","size","logMeOut","clear","height","styles","container","textInput","name","button","color","StyleSheet","backgroundColor","flexDirection","alignItems","padding","marginTop","fontSize","position","right","borderWidth","borderColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,SAASC,YAAT;AACA,OAAOC,IAAP;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,kBACRP,QAAQ,CAAC,KAAD,CADA;AAAA;AAAA,MAC7BQ,MAD6B;AAAA,MACrBC,SADqB;;AAAA,0BAEVV,KAAK,CAACW,UAAN,CAAiBN,YAAjB,CAFU;AAAA;AAAA,MAE7BO,KAF6B;AAAA,MAEtBC,QAFsB;;AAIpC,MAAIC,IAAI,GAAG,MAAX;;AACA,MAAIL,MAAJ,EAAY;AACVK,IAAAA,IAAI,GAAG,MAAP;AACD;;AACD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBX,IAAAA,YAAY,CAACY,KAAb;AACAH,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAHD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,MAAM,EAAEH;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAC,MAA7B;AAAoC,IAAA,IAAI,EAAE,EAA1C;AAA8C,IAAA,KAAK,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiCZ,KAAK,CAACa,IAAvC,CAHF,EAYE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEN,QAA3B;AAAqC,IAAA,KAAK,EAAEG,MAAM,CAACI,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAZF,CADF,CADF;AAoBD;AAED,IAAML,MAAM,GAAGM,UAAU,CAACf,MAAX,CAAkB;AAC/BU,EAAAA,SAAS,EAAE;AACTM,IAAAA,eAAe,EAAE,OADR;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTC,IAAAA,SAAS,EAAE;AALF,GADoB;AAS/BT,EAAAA,SAAS,EAAE;AACTG,IAAAA,KAAK,EAAE,SADE;AAETO,IAAAA,QAAQ,EAAE,EAFD;AAGTF,IAAAA,OAAO,EAAE;AAHA,GAToB;AAe/BN,EAAAA,MAAM,EAAE;AACNS,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,KAAK,EAAE,EAFD;AAGNJ,IAAAA,OAAO,EAAE,CAHH;AAINK,IAAAA,WAAW,EAAE,CAJP;AAKNC,IAAAA,WAAW,EAAE;AALP;AAfuB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, TouchableOpacity, StyleSheet, ScrollView } from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport NewProfile from \"../screens/CreateStore\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { View } from \"react-native\";\r\nimport { LoginContext } from \"../../App\";\r\nimport Main from \"../screens/Main\";\r\n\r\nexport default function TopBar(props) {\r\n  const [create, setCreate] = useState(false);\r\n  const [login, setLogin] = React.useContext(LoginContext);\r\n\r\n  let size = \"auto\";\r\n  if (create) {\r\n    size = \"100%\";\r\n  }\r\n  const logMeOut = () => {\r\n    AsyncStorage.clear();\r\n    setLogin(false);\r\n  };\r\n  return (\r\n    <View style={{ height: size }}>\r\n      <View style={styles.container}>\r\n        <MaterialCommunityIcons name=\"menu\" size={26} color=\"#db7093\" />\r\n\r\n        <Text style={styles.textInput}> {props.name}</Text>\r\n\r\n        {/* <TouchableOpacity\r\n          style={styles.button}\r\n          onPress={() => setCreate(!create)}\r\n        >\r\n          <Text style={{ color: \"#e28ca8\" }}>CREATE STORE</Text>\r\n        </TouchableOpacity> */}\r\n\r\n        <TouchableOpacity onPress={logMeOut} style={styles.button}>\r\n          <Text style={{ color: \"#e28ca8\" }}>Log out</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"black\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    marginTop: \"10%\",\r\n  },\r\n\r\n  textInput: {\r\n    color: \"#e28ca8\",\r\n    fontSize: 20,\r\n    padding: 10,\r\n  },\r\n\r\n  button: {\r\n    position: \"absolute\",\r\n    right: 15,\r\n    padding: 5,\r\n    borderWidth: 3,\r\n    borderColor: \"#db7093\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}