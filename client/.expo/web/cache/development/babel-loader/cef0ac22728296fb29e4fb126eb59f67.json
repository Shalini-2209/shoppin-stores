{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\mobile-app\\\\client\\\\src\\\\screens\\\\Content.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card } from \"react-native-paper\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport TopBar from \"../components/TopBar\";\nimport config from \"../../config\";\nexport var FeedContext = React.createContext();\nexport default function Content() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      content = _useState2[0],\n      setContent = _useState2[1];\n\n  var load = false;\n\n  if (content.length == 0) {\n    load = true;\n  }\n\n  var getData = function getData() {\n    axios({\n      url: config.URI + \"/posts/\"\n    }).then(function (res) {\n      console.log(\"Check out data\");\n      var data = res.data;\n      setContent(data);\n    }).catch(function () {\n      console.log(\"Error in retriving data..\");\n    });\n  };\n\n  var LeftContent = function LeftContent() {\n    return React.createElement(AntDesign, {\n      name: \"rightcircle\",\n      size: 26,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    });\n  };\n\n  useFocusEffect(React.useCallback(function () {\n    getData();\n    return function () {\n      return console.log(\"Stopped\");\n    };\n  }, [content]));\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(TopBar, {\n    name: \"Feed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), load && React.createElement(View, {\n    style: styles.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#db7093\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, content.map(function (item) {\n    return React.createElement(Card, {\n      key: item._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, React.createElement(Card.Title, {\n      title: item.store,\n      subtitle: item.name,\n      left: LeftContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), React.createElement(Card.Cover, {\n      source: {\n        uri: item.image\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 65,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  loading: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/mobile-app/client/src/screens/Content.js"],"names":["React","useState","useEffect","axios","Card","AntDesign","TopBar","config","FeedContext","createContext","Content","content","setContent","load","length","getData","url","URI","then","res","console","log","data","catch","LeftContent","useFocusEffect","useCallback","styles","loading","map","item","_id","store","name","uri","image","StyleSheet","create","container","flex","paddingTop","backgroundColor","justifyContent","alignItems","alignContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport config from \"../../config\";\r\n\r\nexport const FeedContext = React.createContext();\r\n\r\nexport default function Content() {\r\n  const [content, setContent] = useState([]);\r\n  let load = false;\r\n\r\n  if (content.length == 0) {\r\n    load = true;\r\n  }\r\n\r\n  const getData = () => {\r\n    axios({\r\n      url: `${config.URI}/posts/`,\r\n    })\r\n      .then((res) => {\r\n        console.log(\"Check out data\");\r\n        const data = res.data;\r\n        setContent(data);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Error in retriving data..\");\r\n      });\r\n  };\r\n\r\n  const LeftContent = () => (\r\n    <AntDesign name=\"rightcircle\" size={26} color=\"black\" />\r\n  );\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      getData();\r\n\r\n      return () => console.log(\"Stopped\");\r\n    }, [content])\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <TopBar name=\"Feed\" />\r\n      </View>\r\n\r\n      {load && (\r\n        <View style={styles.loading}>\r\n          <ActivityIndicator size=\"large\" color=\"#db7093\" />\r\n        </View>\r\n      )}\r\n      <ScrollView>\r\n        {content.map((item) => (\r\n          <Card key={item._id}>\r\n            <Card.Title\r\n              title={item.store}\r\n              subtitle={item.name}\r\n              left={LeftContent}\r\n            />\r\n            <Card.Cover source={{ uri: item.image }} />\r\n          </Card>\r\n        ))}\r\n      </ScrollView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 65,\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  loading: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}