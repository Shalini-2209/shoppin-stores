{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\shoppin-stores\\\\client\\\\src\\\\screens\\\\Explore.js\";\nimport * as React from \"react\";\nimport { Searchbar } from \"react-native-paper\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TopBar from \"../components/TopBar\";\nimport Store from \"./Store\";\nimport config from \"../../config\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Card } from \"react-native-paper\";\nimport axios from \"axios\";\nexport default function ExploreScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchQuery = _React$useState2[0],\n      setSearchQuery = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      storesList = _React$useState4[0],\n      setStoresList = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      open = _React$useState6[0],\n      setOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      temp = _React$useState8[0],\n      setTemp = _React$useState8[1];\n\n  var onChangeSearch = function onChangeSearch(e) {\n    setSearchQuery(e.target.value);\n  };\n\n  var fetchStores = function fetchStores() {\n    axios({\n      url: config.URI + \"/profile/stores\" + searchQuery\n    }).then(function (res) {\n      console.log(\"Check out data\");\n      var data = res.data;\n\n      if (data.length > 0) {\n        setStoresList(data);\n      }\n\n      setTemp(searchQuery);\n      setSearchQuery(\"\");\n    }).catch(function () {\n      console.log(\"Error in retriving data..\");\n    });\n  };\n\n  var LeftContent = function LeftContent() {\n    return React.createElement(AntDesign, {\n      name: \"profile\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var RightContent = function RightContent() {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setStoresList([]);\n      },\n      style: {\n        paddingRight: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, React.createElement(AntDesign, {\n      name: \"close\",\n      size: 24,\n      color: \"grey\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var openProfile = function openProfile() {\n    setOpen(true);\n    setStoresList([]);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(TopBar, {\n    name: \"Feed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), React.createElement(Searchbar, {\n    placeholder: \"Search\",\n    onIconPress: fetchStores,\n    onChange: onChangeSearch,\n    style: styles.explore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), open && React.createElement(Store, {\n    companyName: temp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }\n  }), storesList && React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, storesList.map(function (item) {\n    return React.createElement(Card, {\n      key: item._id,\n      onPress: openProfile,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, React.createElement(Card.Title, {\n      title: item.companyName,\n      subtitle: item.slogan,\n      left: LeftContent,\n      right: RightContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }));\n  })));\n}\nvar styles = StyleSheet.create({\n  explore: {\n    marginTop: 5\n  }\n});","map":{"version":3,"sources":["D:/shoppin-stores/client/src/screens/Explore.js"],"names":["React","Searchbar","TopBar","Store","config","AntDesign","Card","axios","ExploreScreen","navigation","useState","searchQuery","setSearchQuery","storesList","setStoresList","open","setOpen","temp","setTemp","onChangeSearch","e","target","value","fetchStores","url","URI","then","res","console","log","data","length","catch","LeftContent","RightContent","paddingRight","openProfile","styles","explore","map","item","_id","companyName","slogan","StyleSheet","create","marginTop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Searchbar } from \"react-native-paper\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Text,\r\n} from \"react-native\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport Store from \"./Store\";\r\nimport config from \"../../config\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Card } from \"react-native-paper\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ExploreScreen({ navigation }) {\r\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\r\n  const [storesList, setStoresList] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [temp, setTemp] = React.useState(\"\");\r\n\r\n  const onChangeSearch = (e) => {\r\n    // setOpen(false);\r\n    // setSearchQuery(query);\r\n    // setStoresList([]);\r\n    setSearchQuery(e.target.value)\r\n  };\r\n\r\n  const fetchStores = () => {\r\n    axios({\r\n      url: `${config.URI}/profile/stores${searchQuery}`,\r\n    })\r\n      .then((res) => {\r\n        console.log(\"Check out data\");\r\n        const data = res.data;\r\n        if (data.length > 0) {\r\n          setStoresList(data);\r\n        }\r\n        setTemp(searchQuery);\r\n        setSearchQuery(\"\");\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Error in retriving data..\");\r\n      });\r\n  };\r\n\r\n  const LeftContent = () => (\r\n    <AntDesign name=\"profile\" size={24} color=\"black\" />\r\n  );\r\n  const RightContent = () => (\r\n    <TouchableOpacity\r\n      onPress={() => setStoresList([])}\r\n      style={{ paddingRight: 20 }}\r\n    >\r\n      <AntDesign name=\"close\" size={24} color=\"grey\" />\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const openProfile = () => {\r\n    setOpen(true);\r\n    setStoresList([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <TopBar name=\"Feed\" />\r\n      </View>\r\n      <Searchbar\r\n        placeholder=\"Search\"\r\n        onIconPress={fetchStores}\r\n        onChange={onChangeSearch}\r\n        style={styles.explore}\r\n      />\r\n\r\n      {open && <Store companyName={temp} />}\r\n\r\n      {storesList && (\r\n        <ScrollView>\r\n          {storesList.map((item) => (\r\n            <Card key={item._id} onPress={openProfile}>\r\n              <Card.Title\r\n                title={item.companyName}\r\n                subtitle={item.slogan}\r\n                left={LeftContent}\r\n                right={RightContent}\r\n              />\r\n            </Card>\r\n          ))}\r\n        </ScrollView>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  explore: {\r\n    marginTop: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}