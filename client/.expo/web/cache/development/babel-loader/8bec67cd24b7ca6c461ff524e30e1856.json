{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\mobile-app\\\\client\\\\src\\\\components\\\\ChoosePic.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport firebase from \"../database/Firebase\";\nimport \"firebase/storage\";\nimport Constants from \"expo-constants\";\n\nfunction ProductImg(props) {\n  var dummyImg = \"https://www.lankabangla.com/wp-content/uploads/2019/08/no_image_png_935227.png\";\n\n  var _useState = useState(dummyImg),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  if (props.isPosted) {\n    setImage(dummyImg);\n  }\n\n  console.log(props.isPosted);\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result, fileName;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              fileName = new Date().getTime();\n\n              uploadImg(result.uri, fileName).then(function () {\n                firebase.storage().ref().child(\"images/\" + fileName).getDownloadURL().then(function (url) {\n                  setImage(url);\n                  console.log(\"url:\" + url);\n                  props.onImgAdded(url);\n                });\n                console.log(\"Success\");\n              }).catch = function (err) {\n                console.log(\"Error in uploading to firebase\", err);\n              };\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImg = function uploadImg(uri, fileName) {\n    var response, blob, ref;\n    return _regeneratorRuntime.async(function uploadImg$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context3.sent;\n            ref = firebase.storage().ref().child(\"images/\" + fileName);\n            return _context3.abrupt(\"return\", ref.put(blob));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    onClick: function onClick() {\n      return setImage(dummyImg);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), React.createElement(MaterialCommunityIcons, {\n    onPress: pickImage,\n    name: \"plus-box\",\n    size: 24,\n    color: \"black\",\n    style: {\n      position: \"absolute\",\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default React.memo(ProductImg);","map":{"version":3,"sources":["D:/mobile-app/client/src/components/ChoosePic.js"],"names":["React","useState","useEffect","ImagePicker","MaterialCommunityIcons","firebase","Constants","ProductImg","props","dummyImg","image","setImage","isPosted","console","log","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","fileName","Date","getTime","uploadImg","uri","then","storage","ref","child","getDownloadURL","url","onImgAdded","catch","err","fetch","response","blob","put","flex","alignItems","justifyContent","flexDirection","width","height","position","bottom","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Image, View, Platform } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport firebase from \"../database/Firebase\";\r\nimport \"firebase/storage\";\r\nimport Constants from \"expo-constants\";\r\n\r\nfunction ProductImg(props) {\r\n  //Initialize firebase\r\n\r\n  const dummyImg =\r\n    \"https://www.lankabangla.com/wp-content/uploads/2019/08/no_image_png_935227.png\";\r\n  const [image, setImage] = useState(dummyImg);\r\n\r\n  if (props.isPosted) {\r\n    setImage(dummyImg);\r\n  }\r\n  console.log(props.isPosted);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== \"web\") {\r\n        const {\r\n          status,\r\n        } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== \"granted\") {\r\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      let fileName = new Date().getTime();\r\n      uploadImg(result.uri, fileName).then(() => {\r\n        firebase\r\n          .storage()\r\n          .ref()\r\n          .child(\"images/\" + fileName)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setImage(url);\r\n            console.log(\"url:\" + url);\r\n            props.onImgAdded(url);\r\n          });\r\n        console.log(\"Success\");\r\n      }).catch = (err) => {\r\n        console.log(\"Error in uploading to firebase\", err);\r\n      };\r\n    }\r\n  };\r\n  const uploadImg = async (uri, fileName) => {\r\n    let response = await fetch(uri);\r\n    let blob = await response.blob();\r\n    let ref = firebase\r\n      .storage()\r\n      .ref()\r\n      .child(\"images/\" + fileName);\r\n    return ref.put(blob);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          <Image\r\n            source={{ uri: image }}\r\n            style={{ width: 200, height: 200 }}\r\n            onClick={() => setImage(dummyImg)}\r\n          />\r\n          <MaterialCommunityIcons\r\n            onPress={pickImage}\r\n            name=\"plus-box\"\r\n            size={24}\r\n            color=\"black\"\r\n            style={{ position: \"absolute\", bottom: 0 }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(ProductImg);\r\n"]},"metadata":{},"sourceType":"module"}