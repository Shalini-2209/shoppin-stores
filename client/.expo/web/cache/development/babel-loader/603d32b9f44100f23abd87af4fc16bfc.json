{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\shoppin-stores\\\\client\\\\src\\\\screens\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { LoginContext } from \"../components/LoginContext\";\nimport config from \"../../config\";\nexport default function Login(props) {\n  var initialState = {\n    mobile: \"\",\n    password: \"\"\n  };\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      log = _useState2[0],\n      setLog = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      form = _useState4[0],\n      setForm = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      load = _useState6[0],\n      setLoad = _useState6[1];\n\n  var _React$useContext = React.useContext(LoginContext),\n      _React$useContext2 = _slicedToArray(_React$useContext, 2),\n      login = _React$useContext2[0],\n      setLogin = _React$useContext2[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem(\"credentials\").then(function (res) {\n      if (res) {\n        setForm(false);\n      }\n    });\n  }, []);\n\n  var handleSave = function handleSave() {\n    var payload = {\n      mobile: log.mobile,\n      password: log.password\n    };\n    setLoad(true);\n    axios({\n      method: \"post\",\n      url: config.URI + \"/register/users\",\n      data: payload\n    }).then(function (msg) {\n      if (msg.data.length == 1) {\n        AsyncStorage.setItem(\"credentials\", JSON.stringify(msg.data));\n        setLogin(true);\n        props.navigation.navigate(\"SwitchTabs\");\n      } else {\n        alert(\"Invalid user!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Internal server error\" + error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, form && React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    maxLength: 20,\n    value: log.mobile,\n    keyboardType: \"numeric\",\n    placeholder: \"Mobile\",\n    onChangeText: function onChangeText(text) {\n      return setLog(_objectSpread(_objectSpread({}, log), {}, {\n        mobile: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    maxLength: 20,\n    style: styles.textInput,\n    value: log.password,\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setLog(_objectSpread(_objectSpread({}, log), {}, {\n        password: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.saveButton,\n    onPress: function onPress() {\n      handleSave();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.saveButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Log me in!\"))), load && React.createElement(View, {\n    style: styles.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#db7093\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  textInput: {\n    margin: 15,\n    borderBottomWidth: 1,\n    borderColor: \"grey\"\n  },\n  saveButton: {\n    borderWidth: 1,\n    backgroundColor: \"black\",\n    borderRadius: 30,\n    borderColor: \"#db7093\",\n    borderWidth: 3,\n    padding: 15,\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  loading: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\"\n  },\n  saveButtonText: {\n    color: \"#db7093\",\n    fontSize: 20,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/shoppin-stores/client/src/screens/Login.js"],"names":["React","useState","useEffect","AsyncStorage","axios","LoginContext","config","Login","props","initialState","mobile","password","log","setLog","form","setForm","load","setLoad","useContext","login","setLogin","getItem","then","res","handleSave","payload","method","url","URI","data","msg","length","setItem","JSON","stringify","navigation","navigate","alert","catch","error","console","styles","container","textInput","text","saveButton","saveButtonText","loading","StyleSheet","create","flex","justifyContent","margin","borderBottomWidth","borderColor","borderWidth","backgroundColor","borderRadius","padding","alignItems","marginTop","alignContent","color","fontSize","textAlign"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AASA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,MAAMC,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,EADW;AAEnBC,IAAAA,QAAQ,EAAE;AAFS,GAArB;;AADmC,kBAKbV,QAAQ,CAACQ,YAAD,CALK;AAAA;AAAA,MAK5BG,GAL4B;AAAA,MAKvBC,MALuB;;AAAA,mBAMXZ,QAAQ,CAAC,IAAD,CANG;AAAA;AAAA,MAM5Ba,IAN4B;AAAA,MAMtBC,OANsB;;AAAA,mBAOXd,QAAQ,CAAC,KAAD,CAPG;AAAA;AAAA,MAO5Be,IAP4B;AAAA,MAOtBC,OAPsB;;AAAA,0BAQTjB,KAAK,CAACkB,UAAN,CAAiBb,YAAjB,CARS;AAAA;AAAA,MAQ5Bc,KAR4B;AAAA,MAQrBC,QARqB;;AAUnClB,EAAAA,SAAS,CAAC,YAAM;AAEdC,IAAAA,YAAY,CAACkB,OAAb,CAAqB,aAArB,EAAoCC,IAApC,CAAyC,UAACC,GAAD,EAAS;AAChD,UAAIA,GAAJ,EAAS;AACPR,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMS,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMC,OAAO,GAAG;AACdf,MAAAA,MAAM,EAAEE,GAAG,CAACF,MADE;AAEdC,MAAAA,QAAQ,EAAEC,GAAG,CAACD;AAFA,KAAhB;AAKAM,IAAAA,OAAO,CAAC,IAAD,CAAP;AAEAb,IAAAA,KAAK,CAAC;AACJsB,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAKrB,MAAM,CAACsB,GAAZ,oBAFC;AAGJC,MAAAA,IAAI,EAAEJ;AAHF,KAAD,CAAL,CAKGH,IALH,CAKQ,UAACQ,GAAD,EAAS;AACb,UAAIA,GAAG,CAACD,IAAJ,CAASE,MAAT,IAAmB,CAAvB,EAA0B;AACxB5B,QAAAA,YAAY,CAAC6B,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACD,IAAnB,CAApC;AAEAT,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAZ,QAAAA,KAAK,CAAC2B,UAAN,CAAiBC,QAAjB,CAA0B,YAA1B;AACD,OALD,MAKO;AACLC,QAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AACF,KAdH,EAeGC,KAfH,CAeS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAAC5B,GAAR,CAAY,0BAA0B2B,KAAtC;AACD,KAjBH;AAkBD,GA1BD;;AA4BA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5B,IAAI,IACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE2B,MAAM,CAACE,SADhB;AAEE,IAAA,SAAS,EAAE,EAFb;AAGE,IAAA,KAAK,EAAE/B,GAAG,CAACF,MAHb;AAIE,IAAA,YAAY,EAAC,SAJf;AAKE,IAAA,WAAW,EAAC,QALd;AAME,IAAA,YAAY,EAAE,sBAACkC,IAAD;AAAA,aAAU/B,MAAM,iCAAMD,GAAN;AAAWF,QAAAA,MAAM,EAAEkC;AAAnB,SAAhB;AAAA,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAE,EADb;AAEE,IAAA,KAAK,EAAEH,MAAM,CAACE,SAFhB;AAGE,IAAA,KAAK,EAAE/B,GAAG,CAACD,QAHb;AAIE,IAAA,eAAe,EAAE,IAJnB;AAKE,IAAA,WAAW,EAAC,UALd;AAME,IAAA,YAAY,EAAE,sBAACiC,IAAD;AAAA,aAAU/B,MAAM,iCAAMD,GAAN;AAAWD,QAAAA,QAAQ,EAAEiC;AAArB,SAAhB;AAAA,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACI,UADhB;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbrB,MAAAA,UAAU;AACX,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACK,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CAnBF,CAFJ,EAgCG9B,IAAI,IACH,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyB,MAAM,CAACM,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjCJ,CADF;AAwCD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE;AAFP,GADoB;AAM/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,iBAAiB,EAAE,CAFV;AAGTC,IAAAA,WAAW,EAAE;AAHJ,GANoB;AAY/BT,EAAAA,UAAU,EAAE;AACVU,IAAAA,WAAW,EAAE,CADH;AAGVC,IAAAA,eAAe,EAAE,OAHP;AAIVC,IAAAA,YAAY,EAAE,EAJJ;AAKVH,IAAAA,WAAW,EAAE,SALH;AAMVC,IAAAA,WAAW,EAAE,CANH;AAOVG,IAAAA,OAAO,EAAE,EAPC;AAQVC,IAAAA,UAAU,EAAE,QARF;AASVC,IAAAA,SAAS,EAAE;AATD,GAZmB;AAuB/Bb,EAAAA,OAAO,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPU,IAAAA,YAAY,EAAE,QAHP;AAIPF,IAAAA,UAAU,EAAE;AAJL,GAvBsB;AA6B/Bb,EAAAA,cAAc,EAAE;AACdgB,IAAAA,KAAK,EAAE,SADO;AAEdC,IAAAA,QAAQ,EAAE,EAFI;AAGdC,IAAAA,SAAS,EAAE;AAHG;AA7Be,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  ActivityIndicator,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport axios from \"axios\";\r\nimport { LoginContext } from \"../components/LoginContext\";\r\nimport config from \"../../config\";\r\n\r\nexport default function Login(props) {\r\n  const initialState = {\r\n    mobile: \"\",\r\n    password: \"\",\r\n  };\r\n  const [log, setLog] = useState(initialState);\r\n  const [form, setForm] = useState(true);\r\n  const [load, setLoad] = useState(false);\r\n  const [login, setLogin] = React.useContext(LoginContext);\r\n\r\n  useEffect(() => {\r\n    // AsyncStorage.clear();\r\n    AsyncStorage.getItem(\"credentials\").then((res) => {\r\n      if (res) {\r\n        setForm(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleSave = () => {\r\n    const payload = {\r\n      mobile: log.mobile,\r\n      password: log.password,\r\n    };\r\n\r\n    setLoad(true);\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `${config.URI}/register/users`,\r\n      data: payload,\r\n    })\r\n      .then((msg) => {\r\n        if (msg.data.length == 1) {\r\n          AsyncStorage.setItem(\"credentials\", JSON.stringify(msg.data));\r\n         \r\n          setLogin(true);\r\n          props.navigation.navigate(\"SwitchTabs\");\r\n        } else {\r\n          alert(\"Invalid user!\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Internal server error\" + error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {form && (\r\n        <View>\r\n          <TextInput\r\n            style={styles.textInput}\r\n            maxLength={20}\r\n            value={log.mobile}\r\n            keyboardType=\"numeric\"\r\n            placeholder=\"Mobile\"\r\n            onChangeText={(text) => setLog({ ...log, mobile: text })}\r\n          />\r\n\r\n          <TextInput\r\n            maxLength={20}\r\n            style={styles.textInput}\r\n            value={log.password}\r\n            secureTextEntry={true}\r\n            placeholder=\"Password\"\r\n            onChangeText={(text) => setLog({ ...log, password: text })}\r\n          />\r\n\r\n          <TouchableOpacity\r\n            style={styles.saveButton}\r\n            onPress={() => {\r\n              handleSave();\r\n            }}\r\n          >\r\n            <Text style={styles.saveButtonText}>Log me in!</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n\r\n      {load && (\r\n        <View style={styles.loading}>\r\n          <ActivityIndicator size=\"large\" color=\"#db7093\" />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  textInput: {\r\n    margin: 15,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"grey\",\r\n  },\r\n\r\n  saveButton: {\r\n    borderWidth: 1,\r\n    // borderColor: \"#bc8f8f\",\r\n    backgroundColor: \"black\",\r\n    borderRadius: 30,\r\n    borderColor: \"#db7093\",\r\n    borderWidth: 3,\r\n    padding: 15,\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  loading: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  saveButtonText: {\r\n    color: \"#db7093\",\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}