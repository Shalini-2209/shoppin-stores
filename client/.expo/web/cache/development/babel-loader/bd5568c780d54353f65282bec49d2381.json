{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\mobile-app\\\\client\\\\src\\\\screens\\\\Profile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TopBar from \"../components/TopBar\";\nexport default function ProfileScreen() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  useEffect(function () {\n    AsyncStorage.getItem(\"credentials\").then(function (res) {\n      res = JSON.parse(res);\n      console.log(\"Response\", res[0].mobile);\n      getData(res[0].mobile);\n    });\n  }, []);\n\n  var getData = function getData(num) {\n    axios({\n      url: \"http://localhost:3001/profile/\" + num\n    }).then(function (res) {\n      console.log(\"Profile Page has been loaded!\");\n      var data = res.data;\n      console.log(data);\n      setProfile(data);\n    }).catch(function () {\n      console.log(\"Error in retriving data..\");\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(TopBar, {\n    name: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, user.userName), profile.map(function (item) {\n    return React.createElement(View, {\n      key: item.companyName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, item.companyName, \" \", item.slogan, \" \", item.category, \" \", item.appLink), item.logo && React.createElement(Image, {\n      source: {\n        uri: item.logo\n      },\n      style: {\n        width: 200,\n        height: 200\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }));\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 65,\n    backgroundColor: \"#F5FCFF\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/mobile-app/client/src/screens/Profile.js"],"names":["React","useState","useEffect","AsyncStorage","axios","TopBar","ProfileScreen","profile","setProfile","getItem","then","res","JSON","parse","console","log","mobile","getData","num","url","data","catch","styles","container","user","userName","map","item","companyName","slogan","category","appLink","logo","uri","width","height","StyleSheet","create","flex","paddingTop","backgroundColor","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport axios from \"axios\";\r\nimport { View, Image, ScrollView, StyleSheet, Text } from \"react-native\";\r\nimport TopBar from \"../components/TopBar\";\r\n\r\nexport default function ProfileScreen() {\r\n  const [profile, setProfile] = useState([]);\r\n\r\n  useEffect(() => {\r\n    AsyncStorage.getItem(\"credentials\").then((res) => {\r\n      res = JSON.parse(res);\r\n      console.log(\"Response\", res[0].mobile);\r\n      getData(res[0].mobile);\r\n    });\r\n\r\n    // setTimeout(getData());\r\n  }, []);\r\n\r\n  const getData = (num) => {\r\n    axios({\r\n      url: `http://localhost:3001/profile/${num}`,\r\n    })\r\n      .then((res) => {\r\n        console.log(\"Profile Page has been loaded!\");\r\n        const data = res.data;\r\n        console.log(data);\r\n        setProfile(data);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Error in retriving data..\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <TopBar name=\"Profile\" />\r\n      </View>\r\n\r\n      <ScrollView>\r\n        <View style={styles.container}>\r\n          <Text>{user.userName}</Text>\r\n          {profile.map((item) => (\r\n            <View key={item.companyName}>\r\n              <Text>\r\n                {item.companyName} {item.slogan} {item.category} {item.appLink}\r\n              </Text>\r\n              {item.logo && (\r\n                <Image\r\n                  source={{ uri: item.logo }}\r\n                  style={{ width: 200, height: 200 }}\r\n                />\r\n              )}\r\n            </View>\r\n          ))}\r\n        </View>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 65,\r\n    backgroundColor: \"#F5FCFF\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}