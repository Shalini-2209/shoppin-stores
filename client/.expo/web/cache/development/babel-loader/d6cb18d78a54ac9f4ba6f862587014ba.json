{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\mobile-app\\\\client\\\\src\\\\components\\\\ChoosePic.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport config from \"../../config\";\nimport Constants from \"expo-constants\";\nexport default function ProductImg(props) {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(\"\" + config.firebaseConfig);\n  }\n\n  var dummyImg = \"https://www.lankabangla.com/wp-content/uploads/2019/08/no_image_png_935227.png\";\n\n  var _useState = useState(dummyImg),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              uploadImg(result.uri).then(function () {\n                Alert.alert(\"Success\");\n              }).catch = function (err) {\n                console.log(err);\n              };\n\n              if (result.uri != dummyImg) {\n                props.onImgAdded(result.uri);\n              } else props.onImgAdded(dummyImg);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImg = function uploadImg(uri) {\n    var response, blob, ref;\n    return _regeneratorRuntime.async(function uploadImg$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context3.sent;\n            ref = firebase.storage().ref().child(\"images/\" + uri);\n            return _context3.abrupt(\"return\", ref.put(blob));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    onClick: function onClick() {\n      return setImage(dummyImg);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), React.createElement(MaterialCommunityIcons, {\n    onPress: pickImage,\n    name: \"plus-box\",\n    size: 24,\n    color: \"black\",\n    style: {\n      position: \"absolute\",\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/mobile-app/client/src/components/ChoosePic.js"],"names":["React","useState","useEffect","useRef","ImagePicker","MaterialCommunityIcons","firebase","config","Constants","ProductImg","props","apps","length","initializeApp","firebaseConfig","dummyImg","image","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uploadImg","uri","then","Alert","catch","err","console","log","onImgAdded","fetch","response","blob","ref","storage","child","put","flex","alignItems","justifyContent","flexDirection","width","height","position","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button, Image, View, Platform } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n// import * as firebase from \"firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport config from \"../../config\";\r\nimport Constants from \"expo-constants\";\r\n\r\nexport default function ProductImg(props) {\r\n  //Initialize firebase\r\n\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(`${config.firebaseConfig}`);\r\n  }\r\n\r\n  const dummyImg =\r\n    \"https://www.lankabangla.com/wp-content/uploads/2019/08/no_image_png_935227.png\";\r\n  const [image, setImage] = useState(dummyImg);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== \"web\") {\r\n        const {\r\n          status,\r\n        } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== \"granted\") {\r\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      // setImage(result.uri);\r\n      uploadImg(result.uri).then(() => {\r\n        Alert.alert(\"Success\");\r\n      }).catch = (err) => {\r\n        console.log(err);\r\n      };\r\n      if (result.uri != dummyImg) {\r\n        props.onImgAdded(result.uri);\r\n      } else props.onImgAdded(dummyImg);\r\n    }\r\n  };\r\n  const uploadImg = async (uri) => {\r\n    const response = await fetch(uri);\r\n    const blob = await response.blob();\r\n\r\n    let ref = firebase\r\n      .storage()\r\n      .ref()\r\n      .child(\"images/\" + uri);\r\n    return ref.put(blob);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          <Image\r\n            source={{ uri: image }}\r\n            style={{ width: 200, height: 200 }}\r\n            onClick={() => setImage(dummyImg)}\r\n          />\r\n          <MaterialCommunityIcons\r\n            onPress={pickImage}\r\n            name=\"plus-box\"\r\n            size={24}\r\n            color=\"black\"\r\n            style={{ position: \"absolute\", bottom: 0 }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}